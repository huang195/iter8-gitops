


apiVersion: v1
kind: Secret
metadata:
  name: experiment-yg7rc
  labels:
    app.kubernetes.io/name: iter8
    app.kubernetes.io/instance: yg7rc
    app.kubernetes.io/version: "v0.8"
    app.kubernetes.io/component: spec
    app.kubernetes.io/created-by: iter8
    iter8.tools/app: default
stringData:
  experiment: |
    - task: gen-load-and-collect-metrics-http
      with:
        connections: null
        contentType: null
        duration: null
        errorRanges: null
        numRequests: null
        payloadStr: null
        payloadURL: null
        percentiles:
        - 95
        rps: null
        versionInfo:
        - url: 172.21.154.181:8000
    - task: assess-app-versions
      with:
        SLOs:
        - metric: built-in/http-error-rate
          upperLimit: 0
        - metric: built-in/http-latency-p95
          upperLimit: 150
    - if: SLOs()
      run: |
        echo "Promote"
        curl -v -H 'Content-Type: application/json' \
            -d '{ "action": "promote", "pull_request": { "merged": "", "commits": "", "base": { "ref": "" }}}' \
            http://el-iter8-eventlistener-default.openshift-f0f5a1e5d9c5f09a7767f1f253010cba-0000.us-east.containers.appdomain.cloud
    - if: not SLOs()
      run: |
        echo "Call cleanup"
        curl -v -H 'Content-Type: application/json' \
            -d '{ "action": "cleanup", "pull_request": { "merged": "", "commits": "", "base": { "ref": "" }}}' \
            http://el-iter8-eventlistener-default.openshift-f0f5a1e5d9c5f09a7767f1f253010cba-0000.us-east.containers.appdomain.cloud
---
apiVersion: v1
kind: Secret
metadata:
  name: experiment-yg7rc-result
  labels:
    app.kubernetes.io/name: iter8
    app.kubernetes.io/instance: yg7rc
    app.kubernetes.io/version: "v0.8"
    app.kubernetes.io/component: result
    app.kubernetes.io/created-by: iter8
    iter8.tools/app: default
stringData:
  result: |
    numCompletedTasks: 0
    failure: false
    insights: {
      metricsInfo: {}
    }
---
apiVersion: batch/v1
kind: Job
metadata:
  name: experiment-yg7rc
  labels:
    app.kubernetes.io/name: iter8
    app.kubernetes.io/instance: yg7rc
    app.kubernetes.io/version: "v0.8"
    app.kubernetes.io/component: job
    app.kubernetes.io/created-by: iter8
    iter8.tools/app: default
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: iter8
        app.kubernetes.io/instance: yg7rc
        app.kubernetes.io/version: "v0.8"
        app.kubernetes.io/component: pod
        app.kubernetes.io/created-by: iter8
        iter8.tools/app: default
    spec:
      containers:
      - name: iter8
        image: iter8/iter8:0.8
        imagePullPolicy: Always
        env:
        - name: LOG_LEVEL
          value: info
        command:
        - "/bin/sh"
        - "-c"
        - iter8 k run --id yg7rc  # run experiment using remote secret
      restartPolicy: Never
  backoffLimit: 0
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: experiment-yg7rc
  labels:
    app.kubernetes.io/name: iter8
    app.kubernetes.io/instance: yg7rc
    app.kubernetes.io/version: "v0.8"
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: iter8
    iter8.tools/app: default
rules:
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames: ["experiment-yg7rc","experiment-yg7rc-result"]
  verbs: ["get", "list", "patch", "create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: experiment-yg7rc
  labels:
    app.kubernetes.io/name: iter8
    app.kubernetes.io/instance: yg7rc
    app.kubernetes.io/version: "v0.8"
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: iter8
    iter8.tools/app: default
subjects:
- kind: ServiceAccount
  name: default
roleRef:
  kind: Role
  name: experiment-yg7rc
  apiGroup: rbac.authorization.k8s.io

